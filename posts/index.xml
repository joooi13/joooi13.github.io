<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Yu Joi</title><link>https://joooi13.github.io/posts/</link><description>Recent content in Posts on Yu Joi</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 18 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://joooi13.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>[Kaggle初心者] Titanicの次へ行きたい</title><link>https://joooi13.github.io/posts/titanic/</link><pubDate>Fri, 18 Mar 2022 00:00:00 +0000</pubDate><guid>https://joooi13.github.io/posts/titanic/</guid><description>はじめに 機会学習初心者が Titanic の先へ行きたいとがむしゃらに頑張ったことをまとめます。
この記事はメダルが取れる方法ではありません。
Titanic で挫折しそうな人が読んでくれたら嬉しいなと思って書きます。
Titanic をやる そもそもなぜ Kaggle に挑戦することになったかと言うと、所属する部内で「Kaggle で取り組んだことアウトプットしようぜ！メダル目指そうぜ！」といった流れがありました。この流れに乗ってワイワイ取り組みたかったのと、どこかで機械学習に触れないとなと思っていたので参加することにしました。
「まずは Titanic に取り組んだら良い」と有識者に教えてもらったので、やってみることにしました。Titanic の Competition は、Kaggle の中でもチュートリアルのような存在として有名で、まずは最初に取り組むべき課題の 1 つです。なので、一旦ここで初 Submit をキメることを目標とします。なんか分からんけどとにかく提出。
ここで挫折しそうな人は、Titanic は正直ネット検索したら色々術が出てきますので、それを参考にしたらいいと思います。まずフローを知ることが必要かなと信じ、とにかく提出です。
Titanic - Machine Learning from Disaster
基礎 分からないことが自覚できたので、基礎をやります。
Kaggle 公式が公開している lerning があるので、そこから自分に足りないものを実施しました。
Learn Python, Data Viz, Pandas &amp;amp; More | Tutorials | Kaggle
Python Pandas intro-to-machine-learning 私はこれらに取り組みました。
Intro to machine learning の課題の中で、Housing Prices Competition for Kaggle Learn Users というタイトルの Competition に Submit できます。公式によると、この learning は数ヶ月ではなく数時間でこなせる程度のボリュームであるとのこと。本当か？笑</description><content type="html"><![CDATA[<h2 id="はじめに">はじめに</h2>
<p>機会学習初心者が Titanic の先へ行きたいとがむしゃらに頑張ったことをまとめます。<br>
この記事はメダルが取れる方法ではありません。<br>
Titanic で挫折しそうな人が読んでくれたら嬉しいなと思って書きます。</p>
<h2 id="titanic-をやる">Titanic をやる</h2>
<p>そもそもなぜ Kaggle に挑戦することになったかと言うと、所属する部内で「Kaggle で取り組んだことアウトプットしようぜ！メダル目指そうぜ！」といった流れがありました。この流れに乗ってワイワイ取り組みたかったのと、どこかで機械学習に触れないとなと思っていたので参加することにしました。<br>
「まずは Titanic に取り組んだら良い」と有識者に教えてもらったので、やってみることにしました。Titanic の Competition は、Kaggle の中でもチュートリアルのような存在として有名で、まずは最初に取り組むべき課題の 1 つです。なので、一旦ここで初 Submit をキメることを目標とします。なんか分からんけどとにかく提出。<br>
ここで挫折しそうな人は、Titanic は正直ネット検索したら色々術が出てきますので、それを参考にしたらいいと思います。まずフローを知ることが必要かなと信じ、とにかく提出です。</p>
<p><a href="https://www.kaggle.com/c/titanic">Titanic - Machine Learning from Disaster</a></p>
<h2 id="基礎">基礎</h2>
<p>分からないことが自覚できたので、基礎をやります。<br>
Kaggle 公式が公開している lerning があるので、そこから自分に足りないものを実施しました。</p>
<p><a href="https://www.kaggle.com/learn">Learn Python, Data Viz, Pandas &amp; More | Tutorials | Kaggle</a></p>
<ul>
<li>Python</li>
<li>Pandas</li>
<li>intro-to-machine-learning</li>
</ul>
<p>私はこれらに取り組みました。<br>
Intro to machine learning の課題の中で、Housing Prices Competition for Kaggle Learn Users というタイトルの Competition に Submit できます。公式によると、この learning は数ヶ月ではなく数時間でこなせる程度のボリュームであるとのこと。本当か？笑</p>
<h2 id="本購入">本購入</h2>
<p>基礎をやってもまだ分からない部分が多いので、本を購入しました。<br>
Kaggle 公式は全編英語なので、いまいち英語での理解に自信がないため取り入れました。同じような方はおすすめです。</p>
<p><a href="https://www.amazon.co.jp/dp/4065190061?tag=note0e2a-22&amp;linkCode=ogi&amp;th=1&amp;psc=1">実践 Data Science シリーズ Python ではじめる Kaggle スタートブック</a></p>
<ul>
<li>Kaggle の概要</li>
<li>Titanic の解説</li>
<li>Titanic の先へ行く方法</li>
</ul>
<p>上記 3 点を中心に読みました。<br>
基礎をやったあとに読んで丁度よい内容でした。<br>
中でも、訳も分からず提出した Titanic についての解説はたくさん読みました。伏線回収じゃないですが、あの時よく分からなかったこれは・・！！！<br>
と理解が深まったり、分析をどう進めていけばいいのかも学ぶことができます。<br>
Titanic の先に行く部分についても、別の Competition を検討するために活用できました。</p>
<h2 id="titanic-以外の-competition-を検討">Titanic 以外の Competition を検討</h2>
<p>メダルは到底無理ですが、アウトプットはしようと手を挙げていたので、その期限が迫っている状況でした。Titanic の話をシェアするより、別の Competition にチャレンジした話の方が面白いよなと決め、検討を開始しました。ここまで段階を踏むと割と学習コストもかかっていたり、最初の段階よりは Kaggle に前向きになれていた感じです。ドメイン知識がある課題に取り組む場合、仮説が立てやすいと先に紹介した Kaggle スタートブックに書いてあったのでそれを参考に検索。あるいは単純に興味のある分野でも良いかなと考え選んでいくことにしました。(※ドメイン知識…取り組む事業や分野への知識)</p>
<p>その他に参考にしたのは Competition のカテゴリです。簡単なものから順に書くと以下です。</p>
<ul>
<li>Getting Started</li>
<li>Playground</li>
<li>Featured</li>
<li>Research</li>
</ul>
<p>Titanic や Housing Prices Competition for Kaggle Learn Users は Getting Started です。<br>
なので、一歩踏み出して Playground で探してみます。ちなみに Playground まではメダルや賞金はありません。<br>
いまは Titanic の先に行くことが目標なので OK です。</p>
<h2 id="サンタ">サンタ</h2>
<p>ドメイン知識とか偉そうに書きましたが、結局選択したのはサンタです。サンタの知識が豊富な訳じゃないですが、概要が分かりやすかったので。。笑<br>
本当は好きな野球やアートの Competition もあったのでそちらが良かったのですが、難解だったのでやめました泣</p>
<p>概要は以下です。</p>
<p><a href="https://www.kaggle.com/c/santas-uncertain-bags">santas-uncertain-bags</a></p>
<pre tabindex="0"><code>妖精インターンがプレゼントの重量カラムを drop した
プレゼントの重さの確率分布までは妖精が求めた
サンタが届ける 9 種のプレゼントを 1000 袋にいい感じに分配してほしい
1 袋は 50 ポンドまで、3 つは入れる
フォーマットは正しく提出してね
</code></pre><p>やったこと（詳細には公開禁止なのでざっくり）</p>
<ul>
<li>データ確認(プレゼントや種類ごとの数確認など)</li>
<li>妖精が求めた確率分布を使って各々の最大値や平均値を出す</li>
<li>DataFrame に消えた重さカラム追加</li>
<li>条件を満たしてフォーマットに合わせて提出</li>
</ul>
<p>簡単に記載しましたが、1 項目につき軽く 1-2 時間かかってます。<br>
たぶん慣れている方なら一瞬なのではと辛くなりながら頑張って取り組みました。何度か submit した結果を部内でアウトプットすることが出来ました。<br>
取り組みながら分かったのですが、この課題は機械学習というよりはテーブル操作をする分野のものだそうです。<br>
分析をたくさんしたかと言われると微妙ですが、これを糧にもう少し分析できるような課題に取り組まなければなりませんね。。</p>
<p>以上、アウトプット駆動で取り組んだ内容でした！</p>
]]></content></item><item><title>推し時間</title><link>https://joooi13.github.io/posts/oshi_countdown/</link><pubDate>Tue, 30 Nov 2021 00:00:00 +0000</pubDate><guid>https://joooi13.github.io/posts/oshi_countdown/</guid><description> 概要 大切な時間までカウントダウンするアプリです。
推し時間
使用技術 Flutter</description><content type="html"><![CDATA[<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<h3 id="概要">概要</h3>
<ul>
<li>
<p>大切な時間までカウントダウンするアプリです。</p>
</li>
<li>
<p><a href="https://play.google.com/store/apps/details?id=com.joinc.oshi_countdown">推し時間</a></p>
</li>
</ul>
<h3 id="使用技術">使用技術</h3>
<ul>
<li>Flutter</li>
</ul>
]]></content></item><item><title>Hi! Hangul</title><link>https://joooi13.github.io/posts/hi_hangul/</link><pubDate>Sun, 21 Nov 2021 00:00:00 +0000</pubDate><guid>https://joooi13.github.io/posts/hi_hangul/</guid><description> 概要 クイズ形式でハングルを学べるアプリです。
4 択の問題が出題され、10 問答えたら成績を表示するようにしています。
Hi! Hangul
使用技術 Flutter</description><content type="html"><![CDATA[<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<h3 id="概要">概要</h3>
<ul>
<li>
<p>クイズ形式でハングルを学べるアプリです。</p>
</li>
<li>
<p>4 択の問題が出題され、10 問答えたら成績を表示するようにしています。</p>
</li>
<li>
<p><a href="https://play.google.com/store/apps/details?id=com.joinc.hangul_learn">Hi! Hangul</a></p>
</li>
</ul>
<h3 id="使用技術">使用技術</h3>
<ul>
<li>Flutter</li>
</ul>
]]></content></item><item><title>2021年の朝活まとめ</title><link>https://joooi13.github.io/posts/asakatsu2021/</link><pubDate>Tue, 16 Nov 2021 00:00:00 +0000</pubDate><guid>https://joooi13.github.io/posts/asakatsu2021/</guid><description>2020 年 11 月から今月まで、約 1 年間の朝活を続けることに成功しました。
自分えらい。ぱちぱち..
自宅から徒歩 15 分くらいのコワーキングスペースを契約して、 天気が悪い日や体調の悪い日や寝坊した日を除くと、
だいたい平日週 3,4 日は頑張って通いました〜
きっかけ 2020/11 頃、近所にコワーキングスペースが新規オープンするよというお知らせを見たことです。プランは色々ありましたが、攻めの姿勢で朝 7 時〜10 時のプランにしました。当時は日々刺激がなく、生活の流れを変えたかったんだと思います。（リモートワークになり、夜遅くまでだらだらして朝も 10 時の就業ぎりぎりに起き、のんびりだけど刺激がない感じでした。）このきっかけで、自分の生活リズムがガラッと変わりました。
また、スペースが自宅から徒歩 15 分ということで往復で 4000 歩くらい歩く為、明らかに健康になりました。思い返すと真冬と真夏はよく通えたなと思いますが、自分は貧乏性なので通わないと勿体ないという気持ちを作ることができたのが続けられる要因の 1 つになったと思います笑
なにをしたか 最初は仕事をしていることが多かったです。 仕事をしてしまっていたのほうが正しいかもしれません。
結構見切り発車的に契約したので、やりたいことも定まらずあまりよくない状態でした。まあとりあえず朝型になるみたいな思いだけを持ってました。
ただ 2021 年になってからは Flutter に目覚め、個人開発に勤しみました。最初は Udemy で The Complete 2021 Flutter Development Bootcamp with Dart という講座の受講をしました。英語でしたが、一石二鳥と思い頑張ってやりました。先生のくれる言葉もすごく素敵で良かったです。
The Complete 2021 Flutter Development Bootcamp with Dart 2021 年 4 月に異動をして TypeScript をやることになったので、慌ててこれまた Udemy にて超 TypeScript 入門 完全パックを受講しました。
動画学習好きすぎる。
超 TypeScript 入門 完全パック(2021) それを一通りやったらまた Flutter に戻って、自作アプリを作成することにし、公開してないものも含めると 2021 年 10 月までに 3 本アプリを作成することができました。これでお金が稼げたとかではないのですが、やり遂げるという感覚を久々に味わえたことがとてもよかったです。</description><content type="html"><![CDATA[<p>2020 年 11 月から今月まで、約 1 年間の朝活を続けることに成功しました。<br>
自分えらい。ぱちぱち..</p>
<p>自宅から徒歩 15 分くらいのコワーキングスペースを契約して、
天気が悪い日や体調の悪い日や寝坊した日を除くと、<br>
だいたい平日週 3,4 日は頑張って通いました〜</p>
<h2 id="きっかけ">きっかけ</h2>
<p>2020/11 頃、近所にコワーキングスペースが新規オープンするよというお知らせを見たことです。プランは色々ありましたが、攻めの姿勢で朝 7 時〜10 時のプランにしました。当時は日々刺激がなく、生活の流れを変えたかったんだと思います。（リモートワークになり、夜遅くまでだらだらして朝も 10 時の就業ぎりぎりに起き、のんびりだけど刺激がない感じでした。）このきっかけで、自分の生活リズムがガラッと変わりました。</p>
<p>また、スペースが自宅から徒歩 15 分ということで往復で 4000 歩くらい歩く為、明らかに健康になりました。思い返すと真冬と真夏はよく通えたなと思いますが、自分は貧乏性なので通わないと勿体ないという気持ちを作ることができたのが続けられる要因の 1 つになったと思います笑</p>
<h2 id="なにをしたか">なにをしたか</h2>
<p>最初は仕事をしていることが多かったです。
仕事をしてしまっていたのほうが正しいかもしれません。<br>
結構見切り発車的に契約したので、やりたいことも定まらずあまりよくない状態でした。まあとりあえず朝型になるみたいな思いだけを持ってました。</p>
<p>ただ 2021 年になってからは Flutter に目覚め、個人開発に勤しみました。最初は Udemy で The Complete 2021 Flutter Development Bootcamp with Dart という講座の受講をしました。英語でしたが、一石二鳥と思い頑張ってやりました。先生のくれる言葉もすごく素敵で良かったです。</p>
<ul>
<li><a href="https://www.udemy.com/course/flutter-bootcamp-with-dart/">The Complete 2021 Flutter Development Bootcamp with Dart</a></li>
</ul>
<p>2021 年 4 月に異動をして TypeScript をやることになったので、慌ててこれまた Udemy にて超 TypeScript 入門 完全パックを受講しました。<br>
動画学習好きすぎる。</p>
<ul>
<li><a href="https://www.udemy.com/course/typescript-complete/">超 TypeScript 入門 完全パック(2021)</a></li>
</ul>
<p>それを一通りやったらまた Flutter に戻って、自作アプリを作成することにし、公開してないものも含めると 2021 年 10 月までに 3 本アプリを作成することができました。これでお金が稼げたとかではないのですが、やり遂げるという感覚を久々に味わえたことがとてもよかったです。</p>
<p>仕事では web システムの開発なので、モバイルアプリ関連の仕事はもう一切していないのですが、改めて自分はモバイルアプリの開発が結構好きかもということに気が付きました。入り口のハードルは低いけど奥深いところが好きなんだと思います。また、少し離れてみて趣味的に勉強を進める事ができたのが気持ち的に良かったです。「仕事に繋がるからやらなきゃ」とか、「発表のため」みたいな目標はなくコツコツ勉強できました。</p>
<p>もう少し本を呼んだり、文章を書いたり色々できればよりよかったのですが、基本ずっと開発関連のことをしてました。</p>
<p>まあとりあえず 1 年朝活できた自分、えらい。</p>
<h2 id="歩くこと">歩くこと</h2>
<p>余談ですが、往復で朝から 30 分弱歩くのが意外に良くてちょっと散歩にハマりました。<br>
あえて音楽やポッドキャストも聞かず、街の音を聞いてのんびり。近所の小学生が登校していたり、保育園の先生と子供達が散歩していたり駅へ向かうサラリーマンがたくさんいたり、なんとなく季節を感じながら歩くと結構清々しい気持ちになれるものでした。</p>
<p>通勤している頃はあんまりそういった気持ちにならなかったのですが結構穏やかになれます。(ちょっとおばあちゃんみたいだ・・。)</p>
<h2 id="これから">これから</h2>
<p>いい感じで書いてますが、一旦いま契約しているスペースは辞めます笑<br>
朝活は現状しんどくはないので続けていきますが、場所のマンネリと契約時間に少し成約があるのでちょっと考えようかなという感じです。</p>
<p>最近は出社をしてもいいという形になり、オフィスも使えるようになりました。<br>
基本リモートでたまに人に会いに出社という形を組み合わせてより自由度高めで生活していきたいなあという次第です。</p>
]]></content></item><item><title>portfolio作った</title><link>https://joooi13.github.io/posts/portfolio/</link><pubDate>Wed, 22 Sep 2021 00:00:00 +0000</pubDate><guid>https://joooi13.github.io/posts/portfolio/</guid><description>完全に思いつきですよ。
成果物 https://joooi13.dev/
やる気があるときに。。 急に作りはじめるなんて時間に余裕が出た証拠ですが、やる気のある内にということで。
事前調査として Twitter でフォローしている界隈のエンジニアのプロフィール URL を見てみました。
はてぶ・GitHub・自作サイトに設定している人が多かったですが、その中で特に自作(ドメインがその方のアカウントになっていたり、.dev になっていたり)してる方を見させてもらいました。良いものは真似る精神で、手が出しやすそうなものを選定してみました。
まずは Hugo でページを作って、Firebase Hosting でサイト公開しました。
前にノリで Google Domains でドメインを取得してずっと寝かせていたので、カスタムドメインにそれを割り当ててあげました。ページ自体は Hugo に頼って自分の各種 SNS 紐付けたくらいですが、頼ったことでスッキリさくっと仕上がってよかったです。
この勢いでブログも Hugo で作ってぶら下げようかなーとも思ったのですが、個人的にはてぶ → note と使ってきてまた変えるのかという気持ちと、ブログ全然書かないのでこのままでいいかという気持ちで一旦ステイです。プロフィール写真は今年撮った久々にばっさり髪を切った時のものにしました。
これも暫定的に設定しましたが、ちゃんと綺麗な写真とりに行きたいなと思ってます。暫定で設定したものって結局そのままになる気がしますが。
portfolio と呼ぶにはスキルとか業務歴の記載が足りないので、ちょこちょこ書いていこうと思います。</description><content type="html"><![CDATA[<p>完全に思いつきですよ。</p>
<h2 id="成果物">成果物</h2>
<p><a href="https://joooi13.dev/">https://joooi13.dev/</a></p>
<h2 id="やる気があるときに">やる気があるときに。。</h2>
<p>急に作りはじめるなんて時間に余裕が出た証拠ですが、やる気のある内にということで。</p>
<p>事前調査として Twitter でフォローしている界隈のエンジニアのプロフィール URL を見てみました。<br>
はてぶ・GitHub・自作サイトに設定している人が多かったですが、その中で特に自作(ドメインがその方のアカウントになっていたり、.dev になっていたり)してる方を見させてもらいました。良いものは真似る精神で、手が出しやすそうなものを選定してみました。</p>
<p>まずは Hugo でページを作って、Firebase Hosting でサイト公開しました。<br>
前にノリで Google Domains でドメインを取得してずっと寝かせていたので、カスタムドメインにそれを割り当ててあげました。ページ自体は Hugo に頼って自分の各種 SNS 紐付けたくらいですが、頼ったことでスッキリさくっと仕上がってよかったです。</p>
<p>この勢いでブログも Hugo で作ってぶら下げようかなーとも思ったのですが、個人的にはてぶ → note と使ってきてまた変えるのかという気持ちと、ブログ全然書かないのでこのままでいいかという気持ちで一旦ステイです。プロフィール写真は今年撮った久々にばっさり髪を切った時のものにしました。<br>
これも暫定的に設定しましたが、ちゃんと綺麗な写真とりに行きたいなと思ってます。暫定で設定したものって結局そのままになる気がしますが。</p>
<p>portfolio と呼ぶにはスキルとか業務歴の記載が足りないので、ちょこちょこ書いていこうと思います。</p>
]]></content></item><item><title>『チームで育てるAndroidアプリ設計』を読んで</title><link>https://joooi13.github.io/posts/team/</link><pubDate>Tue, 27 Apr 2021 00:00:00 +0000</pubDate><guid>https://joooi13.github.io/posts/team/</guid><description>はじめに この記事は PR です。
エンジニアとしての先輩であり、飲み友達であり、この本の執筆者である釘宮さんに献本いただきましたので、レビューを書きます。
まずは釘宮さん横幕さん執筆お疲れ様でした！
この本はもちろんですが、Android 界隈において定期的に登壇やアウトプットを続けておられること、本当に尊敬します。
チームで育てる Android アプリ設計 - PEAKS
読んだ視点 自分は既に Android エンジニアと名乗れる者ではなく、過去に 2-3 年ほど Android 開発に従事し、現在はサーバサイドやフロントエンドなど主に web サービスの開発に携わっている立場になります。なので感想も Android 寄りのものではないです。
ただ、私のようなエンジニアって案外いるのではないでしょうか？この本について、いまはもう Android やってないから全く理解できない〜ということはなかったよと言いたいです。事例は Android なので、代表的なアーキテクチャ知ってるという方は理解できるのではと思います。
Android 開発未経験という方や、これから頑張りたい方はまず用語が分からないと思うので、理解が難しい部分が多いでしょう。ですがその際は PEAKS から出ている以下の本も合わせて読んでみると良さそうです。
Android アプリ設計パターン入門 - PEAKS
別の本の話をしちゃいました。では本題です。
本の構成について まず、前提として本書は Android のアーキテクチャ自体を学ぶものではなく、各々のチームでどう取り入れ運用していくかという話になります。アーキテクチャ、チームで頑張りたいけどどう進めていったらいいか分かんない！そんな課題を解決してくれる本だそうです。
全 9 章で構成されています。ざっくりと書くと以下です。
1〜4 章：新規開発でのアーキテクチャについて 5〜8 章：大規模開発でのアーキテクチャについて 9 章：新規と大規模の違いについて理解を深める 1〜4 章について 新規開発でのアーキテクチャとはこうすべきだ。の前に、そもそも新規開発ってこういうものだよねというところからです。ある程度ルールがないと秩序は乱れてしまう。まるで社会全体みたいな話からスタートします。アーキテクチャの必要性を理解しながら読み進めることができます。アーキテクチャを構成していく過程やチームとしてどう向き合って行くのか。また、それをどう広げていくかといった方法まで説明されていました。
以下、個人的に印象に残った箇所です。
2 章-2：選定の過程 会社のルールが選定の過程に入っていたので、一般的な本でなかなかこの視点無いかもと思いちょっと親近感がわきました。
3 章-2：選定したアーキテクチャを浸透させていく ここにはサンプルコードを用意する事例があり丁寧すぎるとびっくりしました・・・。
今までそのようなチームに入ったことはないという意味です。自分も当然やったことないです。やっていかなきゃですね。
5〜8 章について チームは変化しつづけるという状態や、新メンバーが来たときなんていう大規模開発あるあるな状況が書かれていました。また、アーキテクチャはどのようなことを想定して作るべきか、そしてチーム全体で納得して進めていく中でそれはどういう効果を持つか。チームを取り巻く環境がリアルでとても読み進めやすかったです。
以下、個人的に印象に残った箇所です。
5 章-2：大規模開発をうまく進めるために必要な要素 多くのエンジニアに参考になりそうです。ちょっと意図とは違うかもしれませんがリーダブルコードを思い出しました。</description><content type="html"><![CDATA[<h2 id="はじめに">はじめに</h2>
<p>この記事は PR です。</p>
<p>エンジニアとしての先輩であり、飲み友達であり、この本の執筆者である釘宮さんに献本いただきましたので、レビューを書きます。</p>
<p>まずは釘宮さん横幕さん執筆お疲れ様でした！<br>
この本はもちろんですが、Android 界隈において定期的に登壇やアウトプットを続けておられること、本当に尊敬します。</p>
<p><a href="https://peaks.cc/books/architecture_with_team">チームで育てる Android アプリ設計 - PEAKS</a></p>
<h2 id="読んだ視点">読んだ視点</h2>
<p>自分は既に Android エンジニアと名乗れる者ではなく、過去に 2-3 年ほど Android 開発に従事し、現在はサーバサイドやフロントエンドなど主に web サービスの開発に携わっている立場になります。なので感想も Android 寄りのものではないです。</p>
<p>ただ、私のようなエンジニアって案外いるのではないでしょうか？この本について、いまはもう Android やってないから全く理解できない〜ということはなかったよと言いたいです。事例は Android なので、代表的なアーキテクチャ知ってるという方は理解できるのではと思います。</p>
<p>Android 開発未経験という方や、これから頑張りたい方はまず用語が分からないと思うので、理解が難しい部分が多いでしょう。ですがその際は PEAKS から出ている以下の本も合わせて読んでみると良さそうです。</p>
<p><a href="https://peaks.cc/books/architecture_patterns">Android アプリ設計パターン入門 - PEAKS</a></p>
<p>別の本の話をしちゃいました。では本題です。</p>
<h2 id="本の構成について">本の構成について</h2>
<p>まず、前提として本書は Android のアーキテクチャ自体を学ぶものではなく、各々のチームでどう取り入れ運用していくかという話になります。アーキテクチャ、チームで頑張りたいけどどう進めていったらいいか分かんない！そんな課題を解決してくれる本だそうです。</p>
<p>全 9 章で構成されています。ざっくりと書くと以下です。</p>
<ul>
<li>1〜4 章：新規開発でのアーキテクチャについて</li>
<li>5〜8 章：大規模開発でのアーキテクチャについて</li>
<li>9 章：新規と大規模の違いについて理解を深める</li>
</ul>
<h2 id="14-章について">1〜4 章について</h2>
<p>新規開発でのアーキテクチャとはこうすべきだ。の前に、そもそも新規開発ってこういうものだよねというところからです。ある程度ルールがないと秩序は乱れてしまう。まるで社会全体みたいな話からスタートします。アーキテクチャの必要性を理解しながら読み進めることができます。アーキテクチャを構成していく過程やチームとしてどう向き合って行くのか。また、それをどう広げていくかといった方法まで説明されていました。</p>
<p>以下、個人的に印象に残った箇所です。</p>
<h3 id="2-章-2選定の過程">2 章-2：選定の過程</h3>
<p>会社のルールが選定の過程に入っていたので、一般的な本でなかなかこの視点無いかもと思いちょっと親近感がわきました。</p>
<h3 id="3-章-2選定したアーキテクチャを浸透させていく">3 章-2：選定したアーキテクチャを浸透させていく</h3>
<p>ここにはサンプルコードを用意する事例があり丁寧すぎるとびっくりしました・・・。<br>
今までそのようなチームに入ったことはないという意味です。自分も当然やったことないです。やっていかなきゃですね。</p>
<h2 id="58-章について">5〜8 章について</h2>
<p>チームは変化しつづけるという状態や、新メンバーが来たときなんていう大規模開発あるあるな状況が書かれていました。また、アーキテクチャはどのようなことを想定して作るべきか、そしてチーム全体で納得して進めていく中でそれはどういう効果を持つか。チームを取り巻く環境がリアルでとても読み進めやすかったです。</p>
<p>以下、個人的に印象に残った箇所です。</p>
<h3 id="5-章-2大規模開発をうまく進めるために必要な要素">5 章-2：大規模開発をうまく進めるために必要な要素</h3>
<p>多くのエンジニアに参考になりそうです。ちょっと意図とは違うかもしれませんがリーダブルコードを思い出しました。</p>
<h3 id="7-章-1-の辺りからアーキテクチャと日常的な改善の課題について">7 章-1 の辺りから：アーキテクチャと日常的な改善の課題について</h3>
<p>その両方どう取り組むかという話が始まりますがこの章は一気読みしちゃいました。個人的には新規開発よりは大規模〜中規模の開発に途中から join することがこれまでの経験上多かったので、共感性が刺激されました。立て続けに課題が羅列してある箇所は、経験を元に書いてあるだけあってリアリティがあります。</p>
<h2 id="全体として">全体として</h2>
<p>経験が多分に盛り込まれています。普段このような視点でプロジェクトを回しているのかと勉強になりました。</p>
<p>ルールは作って終わりではなく、その先を見据えている思想は繰り返し書かれていたので、お二人ともここを特に大事にされているのだなと伝わってきました。設計って自分たちのチームだけのものという意識で考えたり作ったりしますが(そもそも広めるという意識が自分は欠如している・・)、その考えを見直せるような気持ちになると思います。</p>
<p>9 章に「成長痛を軽減」という熱いワードが出てきますが、かなり印象に残りました。<br>
成長痛とはこの本では、人の入れ替わりやプロダクトの規模の変化(=つまり時の流れに伴う様々な要因で起きる痛み)を指します。<br>
成長痛どころか骨折みたいな現場も多く存在するかもしれませんが、ここも必読です。(あ、全部必読です)</p>
<p>お二人のアウトプットや界隈での評判が頭に入っている状態でこの本を読んでいるので、ちょっと盲目的にさすがという感想になってしまいました。また、ここまでなるには自分はかなりの時間を要しそうだとも感じました。ただ、構成についての部分で先に書いた通り、この本の目的もプロジェクトどう進めていったらいいか分からない！そもそも時間がねえ！というような思いを解決するというものでした。きっとエンジニアとして抱えている問題について、解決のヒントになることも多いはずです。</p>
<h2 id="自分の話">自分の話</h2>
<p>少し私の話になぞらえて感想を書いてみます。<br>
Android の話ではないですがちょっと当てはめて考えてみました。<br>
私のいまの状態としては 4 月にちょうど新しいチームにジョインした状況であり、まさに今システムを知っていこうとしています。</p>
<p>さてどんな体制で、どんなシステム構成で、フレームワークは何を使っているのかな？コード規約は？デプロイのフローはどうなっているのか？いろんな視点があると思います。「ざっくりドキュメント見ておいてもらえると助かります。」みたいなときに、たしかに見ておくことはできますが、隅から隅まで読んでおくといった意味ではないでしょう。</p>
<p>どう効果的に見ていくかという意味では、この本にあるような視点でこれから担当するシステムやチームの体制を見てみようと感じました。</p>
<p>例えばどんな部分を制限しどこは制限されていないか。そのプロジェクトが進められる背景や、いまはどういうフェーズか。完璧な体制であるチームはなかなかないんです。どう作っていくか考えましょう。</p>
<p>目論見としてはこの本の恩恵をうけて、いい視点もってるねなんて言われたらいいなと思ったりしてます。笑</p>
<h2 id="さいごに">さいごに</h2>
<p>ぜひ！</p>
<p><a href="https://peaks.cc/books/architecture_with_team">チームで育てる Android アプリ設計 - PEAKS</a></p>
]]></content></item><item><title>買い物リストの管理を簡単にしたい</title><link>https://joooi13.github.io/posts/shopping-list/</link><pubDate>Sat, 10 Oct 2020 00:00:00 +0000</pubDate><guid>https://joooi13.github.io/posts/shopping-list/</guid><description>きっかけ 簡単に家族でショッピングリストを共有したいなと思った。
どこかに日頃から書き込むようにすればいいのだがパッと記載できるものが定まらずなんとなく Google Home アプリのショッピングリストを使っていたりした。
「OK Gooogle、ショッピングリストに”卵”を追加して」
これで追加出来るわけだが、なんと音声で削除ができない。
削除するには、Google ホームアプリ &amp;gt; メニュー &amp;gt; ショッピングリストと遷移して手動で消すみたいなフローになる。(音声で出来る方法があったら本当にすみません)
音声でリストに追加できるのはとても利便性がよいのだが、やっぱりテキストベースでも簡単に操作できたらいいなあという思いがあったり、実は声でなかなか追加しなかったりする現状もある。
やりたいこと 考えたのが LINE の Messaging API を利用して Bot を作成する方法だった。イメージとしてはこんな感じ。
買いたいものを日頃から思いついた時に各々 Bot に送り、それが共通のリストに追加される。買い物の時にそれを一覧としてざっと表示されれば嬉しい。さらに、削除も簡単にできたら利便性がいい。
やったこと ① LINE Developers に登録でアカウントを作成
LINE Developers
② &amp;ldquo;お買い物リスト&amp;quot;のチャンネルを作成する。Messaging API を使う。
Messaging API
③ リスト管理用の Google スプレッドシートを用意
④ GAS をサーバとして API を作成。
ここで ③ で用意したスプレッドシートに書き込み・削除ができるように実装している。
⑤ Messaging API の Webhook 設定に GAS で作成した API を指定
ざっくりこんな感じで実現させた。
結局 Google ホームアプリのショッピングリストは使わなかったが、スプレッドシートでやりたいことが実現できた。
完成形 LINE で実際に操作したキャプチャが以下。</description><content type="html"><![CDATA[<h2 id="きっかけ">きっかけ</h2>
<p>簡単に家族でショッピングリストを共有したいなと思った。<br>
どこかに日頃から書き込むようにすればいいのだがパッと記載できるものが定まらずなんとなく Google Home アプリのショッピングリストを使っていたりした。</p>
<p>「OK Gooogle、ショッピングリストに”卵”を追加して」</p>
<p>これで追加出来るわけだが、なんと音声で削除ができない。<br>
削除するには、Google ホームアプリ &gt; メニュー &gt; ショッピングリストと遷移して手動で消すみたいなフローになる。(音声で出来る方法があったら本当にすみません)</p>
<p>音声でリストに追加できるのはとても利便性がよいのだが、やっぱりテキストベースでも簡単に操作できたらいいなあという思いがあったり、実は声でなかなか追加しなかったりする現状もある。</p>
<h2 id="やりたいこと">やりたいこと</h2>
<p>考えたのが LINE の Messaging API を利用して Bot を作成する方法だった。イメージとしてはこんな感じ。</p>
<p>買いたいものを日頃から思いついた時に各々 Bot に送り、それが共通のリストに追加される。買い物の時にそれを一覧としてざっと表示されれば嬉しい。さらに、削除も簡単にできたら利便性がいい。</p>
<h2 id="やったこと">やったこと</h2>
<p>① LINE Developers に登録でアカウントを作成</p>
<p><a href="https://developers.line.biz/ja/">LINE Developers</a></p>
<p>② &ldquo;お買い物リスト&quot;のチャンネルを作成する。Messaging API を使う。</p>
<p><a href="https://developers.line.biz/ja/services/messaging-api/">Messaging API</a></p>
<p>③ リスト管理用の Google スプレッドシートを用意</p>
<p>④ GAS をサーバとして API を作成。<br>
ここで ③ で用意したスプレッドシートに書き込み・削除ができるように実装している。</p>
<p>⑤ Messaging API の Webhook 設定に GAS で作成した API を指定</p>
<p>ざっくりこんな感じで実現させた。<br>
結局 Google ホームアプリのショッピングリストは使わなかったが、スプレッドシートでやりたいことが実現できた。</p>
<h2 id="完成形">完成形</h2>
<p>LINE で実際に操作したキャプチャが以下。</p>
<p>LINE のメッセージで文字列が送信されたらそれをトリガーにして、スプレッドシートの A 列へ順に書き込まれるようにしている。</p>
<p>現在は、”一覧”という文字列が送信された場合は A 列を全て返すようにし、”削除”という文字列の場合は A 列を全削除するようにしている。また、コンテンツを取得できたので、文字列以外は登録できないように制御をした。</p>
<h2 id="ちょっと便利になった">ちょっと便利になった</h2>
<p>作った Bot を友だち登録し、各々好きな時に必要なものを LINE 送信しておけば、共通のリストで管理ができるようになった。<br>
改善はまだまだできそうだが一旦これで運用する。</p>
]]></content></item><item><title>社会人10年目を迎えた話</title><link>https://joooi13.github.io/posts/10nen/</link><pubDate>Sat, 15 Aug 2020 00:00:00 +0000</pubDate><guid>https://joooi13.github.io/posts/10nen/</guid><description>こんにちは。社会人 10 年目を迎えました、じょいです。
ここまで何とか働いて来れたので社会人としての半生を自己紹介がてら書いてみようと思います。
簡単に言うと私はこれまで二度転職を経験していて、営業職-&amp;gt;エンジニアという異業種にジョブチェンジをしているという経歴です。
一社目 大阪にある商社にて営業職として勤務していました。
飛び込み営業や電話営業を主に行っていて、それはそれはゴリゴリの営業を経験しました。
勤務形態としては早出＆残業からの土曜出社有りで、入社して数カ月後には立派な社畜と化しました。鳥貴族で 23 時スタートの飲み会に頻繁に参加していた頃が一番染まっていたと思います。ただ新卒で入社した自分にはこれが普通なのではと感じていた部分があったし、社会人としてやっていく厳しさを知ったのがこの時ですね。そして根性だけは本当につきました。
ここまで書くとどんどん会社が嫌になって、その結果退職したという印象を受けるかもしれませんが、決してそれだけれはないです。
当時、会計等の管理ソフトを toB 向けに販売していましたが、それをユーザ用に一部カスタマイズをして納品する業務を行なっていました。ちょこっとしたことではありましたが、その業務を「これちょっとおもろいのでは」と感じたことが後にエンジニアへ興味を持ったきっかけとなりました。
また、キャリアウーマンに憧れていて、長らく働いて生きていたいと思っていたのですが、この生活を仮に 10 年続けるのは厳しいという感情が徐々に芽生えていきました。（もっと早く気付いてくれ）
社畜として成長した私でしたが、この生活に 2 年弱で終止符を打つことにしたました。ただここでは 5 年分働いたと今でも思います。
田舎者なので、25 歳までに関東に住みたいとう野望がありました。 そこで仕事を見つけて格好よく働けたら幸せかもしれないという希望もあり、転職活動では東京を視野に入れることにしました。
先程書いたきっかけもあり、未経験でエンジニアになれないかリサーチをして、割と未経験でも募集があることを知りました。文系出身の自分でも例外では無く、エンジニアの教育に力を入れている会社に運良く内定をいただくことができました。歯が痛いと嘘をついて面接を受けにいったり、初めてリモート面接をしてもらったり、この頃の転職エピソードは別記事で書けそうなくらいのボリューム感です。
二社目 こうして、まもなく社会人 3 年目を迎えようかという頃にエンジニアとして転職ができた自分でしたが、学ぶことが想像の何百倍も多く苦労しました。8 時間のプログラミング研修後、深夜のデニーズでわかりやすい Java を抱えながら一人で勉強したことをよく覚えています。（大概のドキュメントはネット上にあることも後に学んだ）研修時間だけでは理解ができない部分が多すぎて、会社の先輩に大変お世話になりました。
わかりやすい Java オブジェクト指向入門編 研修後は EC サイトのテスターから始まり、徐々に簡単な開発を任せてもらえるようになりました。 お客さん先に行って働くというスタイルでいくつかの現場を経験しましたが、どこも優しく良い環境ばかりでした。
運がよかったのかもしれませんが、IT の現場はブラックだのという前情報とは全う世界でした。
採用活動や社内の勉強会にも参加しました。福岡や大阪に出張して採用活動をし、帰ってきたら開発の仕事をして、たまに土日に転職活動フェアに出展する手伝いをしたり。この頃は若さも相まってかなり精力的に活動していた時期でした。本当に。
それらをやりたいと手を挙げていて、いろんな事を経験したいという欲求が強かったです。 丸 4 年を迎えようとしているときに、頑張りを認めていただき社内で大きな賞をもらうことができました。副賞としてシンガポールに研修に連れて行っていただき、一生の思い出になりました。
ある意味ここでやりきった感が出たのかもしれないです。
二社目の会社には本当にお世話になりましたが、30 歳までにさらにステップアップしたいという思いもあり転職を考えるようになりました。。なぜ 30 歳なのかというと、当時の自分は 30 歳に非常に大きな節目を感じていて、根拠はないのですが 30 歳で絶対何かが大きく変わるし、死ぬかもしれないと感じていました。ここはちょっとネタっぽいが本当の話で、友人とよくそろそろ死ぬのではという会話をしてました（笑）結局先が見えてない不安から来ていた発言だったんと思いますが。
三社目 やっと現在。
今の会社に入る前後が一番活発に Tech 系のイベントに参加していました。
そこでいろんな会社の情報を聞いたり、自分の方向性を考えた結果いまの会社にいます。
もう一度しっかり努力して、エンジニアとして頑張ろうと決心の転職です。
業務としては決済系で、初めての領域。自分の知識の無さを日々実感できるよい環境で働くことができています。これは非常に重要なことだと思っていて、結局成長したいし生産性を感じたい。また、慣れや会社の制度要因もありますが、今の会社が一番自由度高く働けています。「オフィスでも家でも自由な場所で働ける」とか「時にはちょっと早く上がってもいい」とか働く上での選択肢が増えることがこんなに素晴らしいんだということを知りました。
今の会社では丸 3 年、社会人としては 10 年目を迎えました。年齢的にもベテランの域に入り、知っていることも増えているはずなのに分からない事が多い。自信をなくすことのほうが多いですが、これからもその繰り替えしなのだなと悟ってます。</description><content type="html"><![CDATA[<p>こんにちは。社会人 10 年目を迎えました、じょいです。</p>
<p>ここまで何とか働いて来れたので社会人としての半生を自己紹介がてら書いてみようと思います。<br>
簡単に言うと私はこれまで二度転職を経験していて、営業職-&gt;エンジニアという異業種にジョブチェンジをしているという経歴です。</p>
<h2 id="一社目">一社目</h2>
<p>大阪にある商社にて営業職として勤務していました。<br>
飛び込み営業や電話営業を主に行っていて、それはそれはゴリゴリの営業を経験しました。<br>
勤務形態としては早出＆残業からの土曜出社有りで、入社して数カ月後には立派な社畜と化しました。鳥貴族で 23 時スタートの飲み会に頻繁に参加していた頃が一番染まっていたと思います。ただ新卒で入社した自分にはこれが普通なのではと感じていた部分があったし、社会人としてやっていく厳しさを知ったのがこの時ですね。そして根性だけは本当につきました。</p>
<p>ここまで書くとどんどん会社が嫌になって、その結果退職したという印象を受けるかもしれませんが、決してそれだけれはないです。<br>
当時、会計等の管理ソフトを toB 向けに販売していましたが、それをユーザ用に一部カスタマイズをして納品する業務を行なっていました。ちょこっとしたことではありましたが、その業務を「これちょっとおもろいのでは」と感じたことが後にエンジニアへ興味を持ったきっかけとなりました。</p>
<p>また、キャリアウーマンに憧れていて、長らく働いて生きていたいと思っていたのですが、この生活を仮に 10 年続けるのは厳しいという感情が徐々に芽生えていきました。（もっと早く気付いてくれ）<br>
社畜として成長した私でしたが、この生活に 2 年弱で終止符を打つことにしたました。ただここでは 5 年分働いたと今でも思います。</p>
<p>田舎者なので、25 歳までに関東に住みたいとう野望がありました。
そこで仕事を見つけて格好よく働けたら幸せかもしれないという希望もあり、転職活動では東京を視野に入れることにしました。<br>
先程書いたきっかけもあり、未経験でエンジニアになれないかリサーチをして、割と未経験でも募集があることを知りました。文系出身の自分でも例外では無く、エンジニアの教育に力を入れている会社に運良く内定をいただくことができました。歯が痛いと嘘をついて面接を受けにいったり、初めてリモート面接をしてもらったり、この頃の転職エピソードは別記事で書けそうなくらいのボリューム感です。</p>
<h2 id="二社目">二社目</h2>
<p>こうして、まもなく社会人 3 年目を迎えようかという頃にエンジニアとして転職ができた自分でしたが、学ぶことが想像の何百倍も多く苦労しました。8 時間のプログラミング研修後、深夜のデニーズでわかりやすい Java を抱えながら一人で勉強したことをよく覚えています。（大概のドキュメントはネット上にあることも後に学んだ）研修時間だけでは理解ができない部分が多すぎて、会社の先輩に大変お世話になりました。</p>
<ul>
<li><a href="https://www.amazon.co.jp/dp/B00HKDWPC6/ref=dp-kindle-redirect?_encoding=UTF8&amp;btkr=1">わかりやすい Java オブジェクト指向入門編</a></li>
</ul>
<p>研修後は EC サイトのテスターから始まり、徐々に簡単な開発を任せてもらえるようになりました。
お客さん先に行って働くというスタイルでいくつかの現場を経験しましたが、どこも優しく良い環境ばかりでした。<br>
運がよかったのかもしれませんが、IT の現場はブラックだのという前情報とは全う世界でした。</p>
<p>採用活動や社内の勉強会にも参加しました。福岡や大阪に出張して採用活動をし、帰ってきたら開発の仕事をして、たまに土日に転職活動フェアに出展する手伝いをしたり。この頃は若さも相まってかなり精力的に活動していた時期でした。本当に。<br>
それらをやりたいと手を挙げていて、いろんな事を経験したいという欲求が強かったです。
丸 4 年を迎えようとしているときに、頑張りを認めていただき社内で大きな賞をもらうことができました。副賞としてシンガポールに研修に連れて行っていただき、一生の思い出になりました。</p>
<p>ある意味ここでやりきった感が出たのかもしれないです。<br>
二社目の会社には本当にお世話になりましたが、30 歳までにさらにステップアップしたいという思いもあり転職を考えるようになりました。。なぜ 30 歳なのかというと、当時の自分は 30 歳に非常に大きな節目を感じていて、根拠はないのですが 30 歳で絶対何かが大きく変わるし、死ぬかもしれないと感じていました。ここはちょっとネタっぽいが本当の話で、友人とよくそろそろ死ぬのではという会話をしてました（笑）結局先が見えてない不安から来ていた発言だったんと思いますが。</p>
<h2 id="三社目">三社目</h2>
<p>やっと現在。<br>
今の会社に入る前後が一番活発に Tech 系のイベントに参加していました。<br>
そこでいろんな会社の情報を聞いたり、自分の方向性を考えた結果いまの会社にいます。</p>
<p>もう一度しっかり努力して、エンジニアとして頑張ろうと決心の転職です。<br>
業務としては決済系で、初めての領域。自分の知識の無さを日々実感できるよい環境で働くことができています。これは非常に重要なことだと思っていて、結局成長したいし生産性を感じたい。また、慣れや会社の制度要因もありますが、今の会社が一番自由度高く働けています。「オフィスでも家でも自由な場所で働ける」とか「時にはちょっと早く上がってもいい」とか働く上での選択肢が増えることがこんなに素晴らしいんだということを知りました。</p>
<p>今の会社では丸 3 年、社会人としては 10 年目を迎えました。年齢的にもベテランの域に入り、知っていることも増えているはずなのに分からない事が多い。自信をなくすことのほうが多いですが、これからもその繰り替えしなのだなと悟ってます。</p>
<h2 id="たかが仕事や">「たかが仕事や」</h2>
<p>突然ですが、10 年の経験の中で特に響いた言葉を紹介します。<br>
これは 1 社目にお世話になった配属先の本部長がよく言っていた言葉です。10 年間でもナンバーワンに刺さった言葉！<br>
ちょっとチームが沈んでいたり、どうしても処理できないことがあったり、気持ち的に辛くなる時が多々有りますよね。「たかが仕事や」これで大概解決していたのがその本部長でした。大変な経験を積んだからこそ言える一言だと本当に思います。<br>
こう思うだけで精神がかなり安定するし、いまでは自分の考え方のベースになっています。</p>
<h2 id="誰も死なないから大丈夫">「誰も死なないから大丈夫」</h2>
<p>これはエンジニアになりたての頃に研修の講師に言われた言葉です。<br>
「IT って最悪なくても大丈夫なものなんだよ。昔はなかったんだから。」という会話の流れがあり、これから大きな事故や障害は絶対経験するけど、最悪誰も死なないから大丈夫って思えばいける。という助言でした。自分は今のところ人の命に関わるシステムを担当したことがないので、この言葉に助けられたことが何度もありました。これは「たかが仕事」よりちょっと極論ですが好きな言葉。</p>
<h2 id="10-年経って思うこと">10 年経って思うこと</h2>
<p>「人間万事塞翁が馬」という言葉の意味を日々感じます。<br>
(京都大学の山中教授や、愛沢えみりさんを尊敬しているのですが、このお二方も好きな言葉としてあげておられました)</p>
<p><a href="https://www.amazon.co.jp/dp/B01FU87WCU/ref=dp-kindle-redirect?_encoding=UTF8&amp;btkr=1">山中伸弥先生に、人生とｉＰＳ細胞について聞いてみた</a></p>
<p>文学系を専攻していたから資料作りや日々の報告に役立つこともあるし、営業経験があるから人間関係を築く力が備わったし、エンジニアとしてもいろんな現場でやってこれたから今があると思います。無駄なことはないと思うし、失敗だっていつかは飲み会のネタにもなります。本当に。</p>
<p>10 年超えたけどもうちょっと頑張ってく。</p>
]]></content></item><item><title>CameraX</title><link>https://joooi13.github.io/posts/camerax/</link><pubDate>Mon, 16 Sep 2019 00:00:00 +0000</pubDate><guid>https://joooi13.github.io/posts/camerax/</guid><description>CameraX CameraX は、カメラアプリの開発を簡単に行うための Jetpack サポート ライブラリです。 Camera2 API の機能を簡単に利用することができます。
Android5.0 以上で動作するので、幅広いデバイスで安定して動作させることができます。
CodeLab 例によって CodeLab やりましょう。
まずは build.gradle の dependencies に CamelaX を追加(alpha 版)
View を用意。TextureView(高速描画の view component)
*端末で Camera の使用を許可するため、AndroidManifest.xmlにパーミッションを追加
previewを実装。撮影する枠の大きさなど指定 *ImageCapture 実装。この時、撮影のトリガーとなるボタンも view に追加
ImageAnalysis クラス実装
（Firebase や MLKit などの機械学習で使えるようです ）
preview
ImageCapture ImageAnalysis それぞれ bindToLifecycle で読み込ませる。
ImageAnalysis ってなんぞや？と思い質問させていただたところ、
画像の平均輝度を数値で計ることができるとのことでした。
検証 1：明るい壁を撮影 検証 2：真っ暗にして撮影 まとめ Camera2 API を使うと、プレビューを表示させることすら大変らしい・・
ですが、CameraX を使うと、簡単なカメラアプリを作る程度ならとても良さそう！</description><content type="html"><![CDATA[<h2 id="camerax">CameraX</h2>
<p>CameraX は、カメラアプリの開発を簡単に行うための <a href="http://d.hatena.ne.jp/keyword/Jetpack">Jetpack</a> サポート ライブラリです。
Camera2 API の機能を簡単に利用することができます。<br>
Android5.0 以上で動作するので、幅広いデバイスで安定して動作させることができます。</p>
<!-- raw HTML omitted -->
<h2 id="codelab">CodeLab</h2>
<p>例によって CodeLab やりましょう。</p>
<!-- raw HTML omitted -->
<ul>
<li>
<p>まずは build.gradle の dependencies に CamelaX を追加(alpha 版)</p>
</li>
<li>
<p>View を用意。TextureView(高速描画の view component)</p>
<p>*端末で Camera の使用を許可するため、AndroidManifest.<a href="http://d.hatena.ne.jp/keyword/xml">xml</a>に<a href="http://d.hatena.ne.jp/keyword/%A5%D1%A1%BC%A5%DF%A5%C3%A5%B7%A5%E7%A5%F3">パーミッション</a>を追加</p>
</li>
<li>
<p><a href="http://d.hatena.ne.jp/keyword/preview">preview</a>を実装。撮影する枠の大きさなど指定
*ImageCapture 実装。この時、撮影のトリガーとなるボタンも view に追加</p>
</li>
<li>
<p>ImageAnalysis クラス実装</p>
<p>（Firebase や MLKit などの<a href="http://d.hatena.ne.jp/keyword/%B5%A1%B3%A3%B3%D8%BD%AC">機械学習</a>で使えるようです ）</p>
</li>
<li>
<p><a href="http://d.hatena.ne.jp/keyword/preview">preview</a></p>
</li>
</ul>
<p><!-- raw HTML omitted --><img src="https://cdn-ak.f.st-hatena.com/images/fotolife/j/joooi13/20190916/20190916120414.png" alt="f:id:joooi13:20190916120414p:plain" title="f:id:joooi13:20190916120414p:plain"><!-- raw HTML omitted --></p>
<ul>
<li>ImageCapture</li>
</ul>
<p><!-- raw HTML omitted --><img src="https://cdn-ak.f.st-hatena.com/images/fotolife/j/joooi13/20190916/20190916120428.png" alt="f:id:joooi13:20190916120428p:plain" title="f:id:joooi13:20190916120428p:plain"><!-- raw HTML omitted --></p>
<ul>
<li>ImageAnalysis</li>
</ul>
<p><!-- raw HTML omitted --><img src="https://cdn-ak.f.st-hatena.com/images/fotolife/j/joooi13/20190916/20190916120457.png" alt="f:id:joooi13:20190916120457p:plain" title="f:id:joooi13:20190916120457p:plain"><!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --><img src="https://cdn-ak.f.st-hatena.com/images/fotolife/j/joooi13/20190916/20190916121338.png" alt="f:id:joooi13:20190916121338p:plain" title="f:id:joooi13:20190916121338p:plain"><!-- raw HTML omitted --></p>
<p>それぞれ bindToLifecycle で読み込ませる。</p>
<p><!-- raw HTML omitted --><img src="https://cdn-ak.f.st-hatena.com/images/fotolife/j/joooi13/20190916/20190916120509.png" alt="f:id:joooi13:20190916120509p:plain" title="f:id:joooi13:20190916120509p:plain"><!-- raw HTML omitted --></p>
<p>ImageAnalysis ってなんぞや？と思い質問させていただたところ、<br>
画像の平均輝度を数値で計ることができるとのことでした。</p>
<ul>
<li>検証 1：明るい壁を撮影</li>
</ul>
<p><!-- raw HTML omitted --><img src="https://cdn-ak.f.st-hatena.com/images/fotolife/j/joooi13/20190916/20190916121811.png" alt="f:id:joooi13:20190916121811p:plain:w250" title="f:id:joooi13:20190916121811p:plain:w250"><!-- raw HTML omitted --></p>
<ul>
<li>検証 2：真っ暗にして撮影</li>
</ul>
<p><!-- raw HTML omitted --><img src="https://cdn-ak.f.st-hatena.com/images/fotolife/j/joooi13/20190916/20190916121831.png" alt="f:id:joooi13:20190916121831p:plain:w250" title="f:id:joooi13:20190916121831p:plain:w250"><!-- raw HTML omitted --></p>
<h2 id="まとめ">まとめ</h2>
<p>Camera2 API を使うと、プレビューを表示させることすら大変らしい・・<br>
ですが、CameraX を使うと、簡単なカメラアプリを作る程度ならとても良さそう！</p>
]]></content></item><item><title>Android Things Starter Kitを試す</title><link>https://joooi13.github.io/posts/androidthings-starterkit/</link><pubDate>Sun, 08 Sep 2019 00:00:00 +0000</pubDate><guid>https://joooi13.github.io/posts/androidthings-starterkit/</guid><description>引っ越しをしたら Android Things Starter Kit が発掘されたので
今更作ってみることにした。(ごめんなさい)
Android Things とは Google 提供の IoT のプラットフォーム。 現在の位置付けは、下記のようなお知らせの通り。
Android Things Starter kit とは Android Thingsを体験できる。
必要なものは全て入っていて、何か買い足したりする必要なく入門ができる。 電子工作未経験でもお手軽に実施できて嬉しい。
開封するとこんな感じ
組み立て tutorial を元に通りに組み立て。30-40 分くらいあればできる。
サポートアプリもある。
CodeLab 日本語版の CodeLab が理解しやすそうだったので、こちらにチャレンジ。
作成した Kit と PC を接続して、AndroidStudio で build することができる。
ディスプレイに任意の文字を表示してみたり、ブザーを鳴らしたり。
Androidセンサーを使って温度や湿度を感知できるので、 晴れだったら SUNNY&amp;hellip;と表示させたりすることもできそう。
やってみるとかなりお手軽にできた！</description><content type="html"><![CDATA[<p>引っ越しをしたら
<a href="http://d.hatena.ne.jp/keyword/Android">Android Things Starter Kit</a> が発掘されたので<br>
今更作ってみることにした。(ごめんなさい)</p>
<h2 id="androidhttpdhatenanejpkeywordandroid-things-とは"><a href="http://d.hatena.ne.jp/keyword/Android">Android</a> Things とは</h2>
<p>Google 提供の IoT のプラットフォーム。
現在の位置付けは、下記のようなお知らせの通り。</p>
<!-- raw HTML omitted -->
<h2 id="androidhttpdhatenanejpkeywordandroid-things-starter-kit-とは"><a href="http://d.hatena.ne.jp/keyword/Android">Android</a> Things Starter kit とは</h2>
<p><a href="http://d.hatena.ne.jp/keyword/Android">Android Things</a>を体験できる。<br>
必要なものは全て入っていて、何か買い足したりする必要なく入門ができる。
電子工作未経験でもお手軽に実施できて嬉しい。</p>
<!-- raw HTML omitted -->
<p>開封するとこんな感じ</p>
<p><!-- raw HTML omitted --><img src="https://cdn-ak.f.st-hatena.com/images/fotolife/j/joooi13/20190825/20190825202149.png" alt="f:id:joooi13:20190825202149p:plain" title="f:id:joooi13:20190825202149p:plain"><!-- raw HTML omitted --></p>
<h2 id="組み立て">組み立て</h2>
<p>tutorial を元に通りに組み立て。30-40 分くらいあればできる。<br>
サポートアプリもある。</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<p><!-- raw HTML omitted --><img src="https://cdn-ak.f.st-hatena.com/images/fotolife/j/joooi13/20190825/20190825202327.png" alt="f:id:joooi13:20190825202327p:plain" title="f:id:joooi13:20190825202327p:plain"><!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --><img src="https://cdn-ak.f.st-hatena.com/images/fotolife/j/joooi13/20190825/20190825202423.png" alt="f:id:joooi13:20190825202423p:plain" title="f:id:joooi13:20190825202423p:plain"><!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --><img src="https://cdn-ak.f.st-hatena.com/images/fotolife/j/joooi13/20190825/20190825202450.png" alt="f:id:joooi13:20190825202450p:plain" title="f:id:joooi13:20190825202450p:plain"><!-- raw HTML omitted --></p>
<h2 id="codelab">CodeLab</h2>
<p>日本語版の CodeLab が理解しやすそうだったので、こちらにチャレンジ。<br>
作成した Kit と PC を接続して、AndroidStudio で build することができる。</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<p>ディスプレイに任意の文字を表示してみたり、ブザーを鳴らしたり。</p>
<p><a href="http://d.hatena.ne.jp/keyword/Android">Android</a>センサーを使って温度や湿度を感知できるので、
晴れだったら SUNNY&hellip;と表示させたりすることもできそう。</p>
<p><!-- raw HTML omitted --><img src="https://cdn-ak.f.st-hatena.com/images/fotolife/j/joooi13/20190908/20190908173939.jpg" alt="f:id:joooi13:20190908173939j:plain" title="f:id:joooi13:20190908173939j:plain"><!-- raw HTML omitted --></p>
<!-- raw HTML omitted -->
<p>やってみるとかなりお手軽にできた！</p>
]]></content></item><item><title>Yahoo Japan Tech Conference 2019に参加しました</title><link>https://joooi13.github.io/posts/yahoojapan-techconference2019/</link><pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate><guid>https://joooi13.github.io/posts/yahoojapan-techconference2019/</guid><description>YJTC 初参加！
以下、印象に残った部分のメモ。
基調講演 ヤフーが大切にしていること。
ユーザのアクションを最大化しよう！ AI に特化したスパコンkukai（2015 年〜）のお話。 水分に弱いのが一般的なデータセンターだが、 kukai は液体で冷やしているいて、壁に穴を開けて設置している。 kukai とは
簡単なことは一つもないけど、未来を作るのは楽しい。 セキュア通信レベル向上
201806 TLS1.2 に切り替え
SSL/TLS1.0,1.1 は利用停止
他社の動きの影響は割と大きい。
AppleのHTTPSの話やGoogleの話。
売上への影響より安全を優先し、全サービス以降を決意。 一般の人への告知は難しい・・判定結果のページを表示 世界標準 CVSS に沿って取り組んでいく。 www.slideshare.net
もう道に迷わない！ Yahoo! MAP における AR 体験 iOS限定の ARKit を使った道案内機能のお話。
技術面 AR モードの開発チームは３人で、
開発は名古屋とデザイナーは東京という体制。 ARKit オブジェクトの種類の説明 ゴールは、常にユーザの方をみるように実装している GeoMetry と Texture を適切に設定すると AR の世界に様々なものを配置できる。
→ 少人数でもナビゲーションを使うことができる！ AR 特有のユースケースについて
2D ：
ルート確認や俯瞰できる
3D：
いまこの瞬間に向かうべき方向の案内 現在地周辺にフォーカスできる 日本はまだまだ AR 体験に慣れている人が少ないので、
ルートから外れた場合のフィードバックも大切にしている。
ユーザにとって危ないシーンでは使えないようにする。
（暗闇など 新しいものを取り入れる場合は、
あらゆる可能性を想定しなければならない。 ゴール時の癒やしにより、何度も遊びたくなる。</description><content type="html"><![CDATA[<h2 id="yjtc">YJTC</h2>
<p>初参加！</p>
<!-- raw HTML omitted -->
<p>以下、印象に残った部分のメモ。</p>
<h2 id="基調講演">基調講演</h2>
<ul>
<li>ヤフーが大切にしていること。<br>
ユーザのアクションを最大化しよう！</li>
<li>AI に特化した<a href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%D1%A5%B3%A5%F3">スパコン</a>kukai（2015 年〜）のお話。
水分に弱いのが一般的なデータセンターだが、 kukai は液体で冷やしているいて、壁に穴を開けて設置している。</li>
</ul>
<blockquote>
<p>kukai とは</p>
<!-- raw HTML omitted -->
</blockquote>
<ul>
<li>簡単なことは一つもないけど、未来を作るのは楽しい。</li>
<li>セキュア通信レベル向上<br>
201806 TLS1.2 に切り替え<br>
<a href="http://d.hatena.ne.jp/keyword/SSL">SSL</a>/TLS1.0,1.1 は利用停止<br>
他社の動きの影響は割と大きい。<br>
<a href="http://d.hatena.ne.jp/keyword/Apple">Apple</a>の<a href="http://d.hatena.ne.jp/keyword/HTTPS">HTTPS</a>の話や<a href="http://d.hatena.ne.jp/keyword/Google">Google</a>の話。<br>
売上への影響より安全を優先し、全サービス以降を決意。</li>
<li>一般の人への告知は難しい・・判定結果のページを表示
<!-- raw HTML omitted -->
</li>
<li>世界標準 CVSS に沿って取り組んでいく。
<!-- raw HTML omitted -->
</li>
</ul>
<!-- raw HTML omitted -->
<p><!-- raw HTML omitted --><!-- raw HTML omitted --><a href="https://www.slideshare.net">www.slideshare.net</a><!-- raw HTML omitted --><!-- raw HTML omitted --></p>
<h2 id="もう道に迷わない-yahoohttpdhatenanejpkeywordyahoo21-map-における-ar-体験">もう道に迷わない！ <a href="http://d.hatena.ne.jp/keyword/Yahoo%21">Yahoo!</a> MAP における AR 体験</h2>
<p><a href="http://d.hatena.ne.jp/keyword/iOS">iOS</a>限定の ARKit を使った道案内機能のお話。</p>
<ul>
<li>技術面</li>
<li>AR モードの開発チームは３人で、<br>
開発は名古屋とデザイナーは東京という体制。</li>
<li>ARKit
<!-- raw HTML omitted -->
</li>
<li>オブジェクトの種類の説明</li>
<li>ゴールは、常にユーザの方をみるように実装している</li>
<li>GeoMetry と Texture を適切に設定すると
AR の世界に様々なものを配置できる。<br>
→ 少人数でもナビゲーションを使うことができる！</li>
<li>AR 特有の<a href="http://d.hatena.ne.jp/keyword/%A5%E6%A1%BC%A5%B9%A5%B1%A1%BC%A5%B9">ユースケース</a>について<br>
2D ：<br>
ルート確認や俯瞰できる<br>
3D：<br>
いまこの瞬間に向かうべき方向の案内
現在地周辺にフォーカスできる</li>
<li>日本はまだまだ AR 体験に慣れている人が少ないので、<br>
ルートから外れた場合のフィードバックも大切にしている。<br>
ユーザにとって危ないシーンでは使えないようにする。<br>
（暗闇など</li>
<li>新しいものを取り入れる場合は、<br>
あらゆる可能性を想定しなければならない。</li>
<li>ゴール時の癒やしにより、何度も遊びたくなる。<br>
（目的地でけんさくくんが手を振って迎えてくれるのは本当にかわいい。。すこ。。</li>
</ul>
<!-- raw HTML omitted -->
<p><!-- raw HTML omitted --><!-- raw HTML omitted --><a href="https://www.slideshare.net">www.slideshare.net</a><!-- raw HTML omitted --><!-- raw HTML omitted --></p>
<h2 id="ライブクイズワイキューを生み出した内因的モチベーションドリブンワイキューが目指した楽しい時間を作るデザイン">ライブクイズ「ワイキュー」を生み出した&quot;内因的モチベーションドリブン&quot;／ワイキューが目指した&quot;楽しい時間を作るデザイン&quot;</h2>
<!-- raw HTML omitted -->
<ul>
<li>いままでにない利用想起への挑戦。
戦いの場は単体から全体へ変わっている。</li>
<li>惰性的な日常にドキドキする瞬間を</li>
<li>小さくても成功体験はモチベーションあがる。<br>
社内での検証。社内がワイワイするかんじ。成功体験！<br>
（大きな会社の強みを感じたそう<br>
仮説検証をによる成功体験をチームビルディングにつなげる！<br>
どうメンバーのモチベーションが上がるかまで設計する。</li>
</ul>
<!-- raw HTML omitted -->
<p><!-- raw HTML omitted --><!-- raw HTML omitted -->t.co<!-- raw HTML omitted --><!-- raw HTML omitted --></p>
<h2 id="ライブ動画配信サービスワイキューの作り方優れた社内技術で実現する少人数のサービス開発">ライブ動画配信サービス「ワイキュー」の作り方〜優れた社内技術で実現する、少人数のサービス開発〜</h2>
<ul>
<li>yUI→React</li>
<li>瞬間的に回答が集中する。
T ポイントはユーザさんの資産に関わる。
堅牢に。</li>
</ul>
<p>（ワイキューでやっていることとやっていないことの切り分けを
明確にした説明だった。）</p>
<ul>
<li>社内に PF が揃っているから三人でも素早い開発ができる！</li>
</ul>
<h3 id="豊かなスポーツライフの実現を目指すスポーツナビhttpdhatenanejpkeyworda5b9a5dda1bca5c4a5caa5d3のシステムアーキテクチャhttpdhatenanejpkeyworda5a2a1bca5ada5c6a5afa5c1a5e3">豊かなスポーツライフの実現を目指す、<a href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%DD%A1%BC%A5%C4%A5%CA%A5%D3">スポーツナビ</a>のシステム<a href="http://d.hatena.ne.jp/keyword/%A5%A2%A1%BC%A5%AD%A5%C6%A5%AF%A5%C1%A5%E3">アーキテクチャ</a></h3>
<ul>
<li>広さと深さを兼ねた豊富なデータを扱うシステム<br>
広さ：幅広い競技。スポーツ全体に貢献<br>
深さ：競技に特価した詳細なデータを扱っている。</li>
<li>DB は競技ごとに用意されていて、<br>
競技に合わせた情報を提供しやすくなっている！<br>
→ 段階的な対応を行うことが可能。</li>
<li>運用の話。<br>
競技の盛り上がりに応じて大量のアクセスが発生する。<br>
盛り上がった状態を逃さないって大変。</li>
</ul>
<!-- raw HTML omitted -->
<p><!-- raw HTML omitted --><!-- raw HTML omitted --><a href="https://www.slideshare.net">www.slideshare.net</a><!-- raw HTML omitted --><!-- raw HTML omitted --></p>
<h2 id="拡張性あるデザインシステム構築から挑むgyaohttpdhatenanejpkeywordgyao21のウェブリニューアル">拡張性あるデザインシステム構築から挑む、<a href="http://d.hatena.ne.jp/keyword/GYAO%21">GYAO!</a>のウェブリニューアル</h2>
<ul>
<li><a href="http://d.hatena.ne.jp/keyword/GYAO%21">GYAO!</a>は刷新を進めている</li>
<li>ミッション：<br>
レガシー WEB システムからの脱却<br>
既存プロダクトの維持して事業目標を達成</li>
<li>敵を知る：<br>
ヤフーで検索しているのに<a href="http://d.hatena.ne.jp/keyword/GYAO%21">GYAO!</a>が上がってこない！（辛い</li>
<li>SpeedIndex の指標が悪い</li>
</ul>
<!-- raw HTML omitted -->
<p>段階移行でどんどんユーザさんに新しいものを届けていくことを選択した。</p>
<ul>
<li>パフォーマンス改善。<br>
まず測る。計測できる環境を整えた。</li>
<li>初期表示の改善。
クリティカル<a href="http://d.hatena.ne.jp/keyword/%A5%EC%A5%F3%A5%C0%A5%EA%A5%F3%A5%B0">レンダリング</a>パスを撲滅。<br>
AMP の恩恵でいい感じになってきている</li>
<li>ピュアみ（重要）<br>
同じデータを入れたら、必ず同じ表示となる<a href="http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%DD%A1%BC%A5%CD%A5%F3%A5%C8">コンポーネント</a>を作成すること（スナップショットテストの実現ができる）</li>
<li>組織を替えていくのは難しい</li>
<li><a href="http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%DD%A1%BC%A5%CD%A5%F3%A5%C8">コンポーネント</a>の仕様を体験するため、練習問題を用意。
それを実践につなげる。新しく join した人に効果的かも</li>
</ul>
<!-- raw HTML omitted -->
<p><!-- raw HTML omitted --><!-- raw HTML omitted --><a href="https://www.slideshare.net">www.slideshare.net</a><!-- raw HTML omitted --><!-- raw HTML omitted --></p>
<h2 id="ctoc-配信サービスのバックエンドからioshttpdhatenanejpkeywordiosアプリまで-ヤフオクhttpdhatenanejpkeyworda5e4a5d5a5aaa5afライブの全貌と-xp-開発">CtoC 配信サービスのバックエンドから<a href="http://d.hatena.ne.jp/keyword/iOS">iOS</a>アプリまで ～<a href="http://d.hatena.ne.jp/keyword/%A5%E4%A5%D5%A5%AA%A5%AF">ヤフオク</a>!ライブの全貌と XP 開発～</h2>
<ul>
<li><a href="http://d.hatena.ne.jp/keyword/%A5%E4%A5%D5%A5%AA%A5%AF">ヤフオク</a>！ライブの話。<br>
双方向の通信機能<br>
落札や出品などの一方的な通信機能</li>
<li>Redis</li>
</ul>
<!-- raw HTML omitted -->
<ul>
<li>オンメモリキャッスストレージ
リアルタイム処理の中心となる高機能な通信経路</li>
<li><a href="http://d.hatena.ne.jp/keyword/%A5%E4%A5%D5%A5%AA%A5%AF">ヤフオク</a>！は 40 機能ある
そこにライブ機能を追加
依存性の複雑化が課題。</li>
<li><a href="http://d.hatena.ne.jp/keyword/%A5%DA%A5%A2%A5%D7%A5%ED">ペアプロ</a>楽しそうだったｗ</li>
</ul>
<!-- raw HTML omitted -->
<p><!-- raw HTML omitted --><!-- raw HTML omitted --><a href="https://www.slideshare.net">www.slideshare.net</a><!-- raw HTML omitted --><!-- raw HTML omitted --></p>
]]></content></item><item><title>DevFest Tokyo 2018</title><link>https://joooi13.github.io/posts/devfest-tokyo2018/</link><pubDate>Sat, 08 Sep 2018 00:00:00 +0000</pubDate><guid>https://joooi13.github.io/posts/devfest-tokyo2018/</guid><description>DevFest Tokyo 2018 DevFest Tokyo に今年も参加してきた。
自分が聞いたセッションと自分の発表のメモです。
Flutter アニメーションの実装方法 アニメーションを実装する基本の流れを見せていただいた。
手順を順に見せていただき、
毎回こにふぁーさんのセッションは非常に聞きやすくたのしい。
PWA now feature FIRE というのを初めて知った。
ユーザ体験を向上させる要素である。
Fast
サイトの表示を早くする
Integrated
他のネイティブアプリと変わらないユーザ体験を摩擦なく
Reliable
どんな状況でも動く。信頼できる
Engaging
魅力的な
一番大事なこと。
オフラインのプッッシュ
バックグラウンドでも ok
ブラウザのサポート
Polymer
push について
ページをロードしたときにプッシュ通知の許可を求めるのはやめる。
これはアンチパターン。 → 許可を求めるストーリーを考える
デザインについて
ネイティブアプリに近いので、ネイティブアプリっぽいデザインは必要になってくる。
普通のアプリはオフライン時のデザインがないが必要である。
web に加えて考える必要があるデザインが多い。
Firebase Overview for native application firebase 入門
firebase いれたい Prediction firestore とりあえずいれとけってやつ。
clashlitics おなじみのやーつ。
会場ではあまり入れている人はいなかった。
Paformans アプリのパフォーマンスを測定
起動にかかる時間や滞在時間やスクリーンの描画にかかる時間などなど
GA for Firebase
AppIndexing
Prediction について
→ これ知らなかった。
7 日間のデータを元にユーザの次の行動を予測する</description><content type="html"><![CDATA[<h2 id="devfest-tokyo-2018">DevFest Tokyo 2018</h2>
<p>DevFest Tokyo に今年も参加してきた。<br>
自分が聞いたセッションと自分の発表のメモです。</p>
<h3 id="flutter-アニメーションの実装方法">Flutter アニメーションの実装方法</h3>
<!-- raw HTML omitted -->
<p>アニメーションを実装する基本の流れを見せていただいた。</p>
<p>手順を順に見せていただき、<br>
毎回こにふぁーさんのセッションは非常に聞きやすくたのしい。</p>
<h2 id="pwa-now-feature">PWA now feature</h2>
<!-- raw HTML omitted -->
<p>FIRE というのを初めて知った。<br>
ユーザ体験を向上させる要素である。</p>
<ul>
<li>
<p>Fast<br>
サイトの表示を早くする</p>
</li>
<li>
<p>Integrated<br>
他のネイティブアプリと変わらないユーザ体験を摩擦なく</p>
</li>
<li>
<p>Reliable<br>
どんな状況でも動く。信頼できる</p>
</li>
<li>
<p>Engaging<br>
魅力的な<br>
一番大事なこと。</p>
</li>
<li>
<p>オフラインのプッッシュ</p>
</li>
<li>
<p>バックグラウンドでも ok</p>
</li>
<li>
<p>ブラウザのサポート</p>
</li>
<li>
<p>Polymer</p>
</li>
</ul>
<!-- raw HTML omitted -->
<ul>
<li>
<p>push について<br>
ページをロードしたときにプッシュ通知の許可を求めるのはやめる。<br>
これはアンチパターン。 → 　許可を求めるストーリーを考える</p>
</li>
<li>
<p>デザインについて<br>
ネイティブアプリに近いので、ネイティブアプリっぽいデザインは必要になってくる。<br>
普通のアプリはオフライン時のデザインがないが必要である。<br>
web に加えて考える必要があるデザインが多い。</p>
</li>
</ul>
<h2 id="firebase-overview-for-native-application">Firebase Overview for native application</h2>
<p>firebase 入門</p>
<ul>
<li>firebase いれたい</li>
<li>Prediction</li>
<li>firestore</li>
</ul>
<p>とりあえずいれとけってやつ。</p>
<ul>
<li>
<p>clashlitics
おなじみのやーつ。<br>
会場ではあまり入れている人はいなかった。</p>
</li>
<li>
<p>Paformans
アプリのパフォーマンスを測定<br>
起動にかかる時間や滞在時間やスクリーンの描画にかかる時間などなど</p>
</li>
<li>
<p>GA for Firebase</p>
</li>
<li>
<p>AppIndexing</p>
</li>
<li>
<p>Prediction について<br>
→ これ知らなかった。<br>
7 日間のデータを元にユーザの次の行動を予測する<br>
離脱しそう・・課金しそう・・など。<br>
GA が入っているのが前提<br>
push 通知にも使えて、離脱しそうなユーザだけ push 送ったりできる。<br>
すごい！</p>
</li>
</ul>
<h2 id="新しい-material-designhttpdhatenanejpkeywordmaterial20design-とmaterial-designhttpdhatenanejpkeywordmaterial20design-components">新しい <a href="http://d.hatena.ne.jp/keyword/Material%20Design">Material Design</a> と<a href="http://d.hatena.ne.jp/keyword/Material%20Design">Material Design</a> Components</h2>
<!-- raw HTML omitted -->
<p>yanzm さんと namiki さんと共に発表させてもらった。</p>
<p>一人 10 分ずつの発表で、<br>
資料は Google スライドを使用して共有しながらそれぞれ作成した。<br>
個人的には I/O のスピーカーの方達みたいに格好よい感じで<br>
入れ替わりつつやるのを妄想。（伝わってほしい）</p>
<p>自分の担当部分は、Compornent の紹介。<br>
ガイドラインに目を通しつつ、catalog-app をビルドして動作をいじってみて、それをまとめた。</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<p>yanzm さん効果でたくさんの人に来ていただき、珍しく緊張したｗ</p>
<blockquote>
<p><a href="https://twitter.com/hashtag/DevFest18?src=hash&amp;ref_src=twsrc%5Etfw">#DevFest18</a><br>
緊張した 😇 <a href="https://t.co/zOm4UhTl13">pic.twitter.com/zOm4UhTl13</a>— じょいお (@joooi13) <a href="https://twitter.com/joooi13/status/1035766777077059585?ref_src=twsrc%5Etfw">September 1, 2018</a></p>
</blockquote>
<p>登壇駆動で時間をとって触れたので、満足。 やってよかった。</p>
<h2 id="感想">感想</h2>
<p>DevFest は Android だけでなく、いろんな技術の話が聞けて楽しい。 どれも勉強になった。</p>
<p>2 年前の DevFest に参加したことがきっかけで勉強会やコミュニティに<br>
参加し始めたので、毎年それを思い出すなあ・・</p>
]]></content></item><item><title>Google I/O 2018に参加しました</title><link>https://joooi13.github.io/posts/googleio-2018/</link><pubDate>Sun, 13 May 2018 00:00:00 +0000</pubDate><guid>https://joooi13.github.io/posts/googleio-2018/</guid><description>初参加！ 2018/05/08-10 に開催された、Google I/O 2018 に初めて参加をした。
自分が聞いた session などまとめていく。
DAY 01 前日にバッチのピックアップへ行き、そこでグッズを貰えました。
この中から必要なものだけ持参し、
朝食のベーグル＆コーヒーをゲットして Amphitheatre へ！
とにかく人が多かった。
keynote Amphitheatre に入ったときは本当に感動した。
Google AI
・医療機関での活躍の紹介
・同時に発せられる言葉を分けるデモ
・Gmail のサジェスト機能は今月提供される
・Google Photo では明るさをサジェスト＆固定したり、撮影したドキュメントを pdf にできるようになる。また、背景だけ灰色にしたり、過去の撮影した写真の色を再現できる。これらは次の数ヶ月間に提供したいとのことだった。
・Google Assistant については、６つの新しい声を発表。John Legendという有名な歌手？の声も追加。 Assistant
・新しいデバイスの発表があった。スマートディスプレイ
・スタバの注文（他のパートナーも多く来ている）のデモ
・google マップの進化（この夏）
・Assistant がサロンに電話をかけ、人間とやり取りし、予約するデモ。相槌もできる。これは今後さらに実験していく予定 Google News
・top5 の記事を出す
・デザインの変更
・好きな出版社の記事を購読できる Android P
・bata 版の発表。
・テーマは、Intelligence、Simplicity、Digital wellbeing
・バッテリー問題は常にあり、明るさを自動で調整する機能を提供
・使うアプリを予測し、上に並べてくれる。また、行動を予測し、電話の相手などサジェストしてくれる。 ML Kit
・bata 版をリリース ・そういえば pre-show でも ML が使われていたらしい？ 新しい Android のデザインと UI
・電話を裏返しておけば通知が来ない</description><content type="html"><![CDATA[<h2 id="初参加">初参加！</h2>
<p>2018/05/08-10 に開催された、<a href="http://d.hatena.ne.jp/keyword/Google%20I/O">Google I/O</a> 2018 に初めて参加をした。<br>
自分が聞いた session などまとめていく。</p>
<!-- raw HTML omitted -->
<h1 id="day-01">DAY 01</h1>
<p>前日にバッチのピックアップへ行き、そこでグッズを貰えました。</p>
<p><!-- raw HTML omitted --><img src="https://cdn-ak.f.st-hatena.com/images/fotolife/j/joooi13/20180513/20180513192206.png" alt="f:id:joooi13:20180513192206p:plain" title="f:id:joooi13:20180513192206p:plain"><!-- raw HTML omitted --></p>
<p>この中から必要なものだけ持参し、<br>
朝食のベーグル＆コーヒーをゲットして Amphitheatre へ！<br>
とにかく人が多かった。</p>
<h2 id="keynotehttpdhatenanejpkeywordkeynote"><a href="http://d.hatena.ne.jp/keyword/keynote">keynote</a></h2>
<p>Amphitheatre に入ったときは本当に感動した。</p>
<p><!-- raw HTML omitted --><img src="https://cdn-ak.f.st-hatena.com/images/fotolife/j/joooi13/20180513/20180513160812.png" alt="f:id:joooi13:20180513160812p:plain" title="f:id:joooi13:20180513160812p:plain"><!-- raw HTML omitted --></p>
<ul>
<li>Google AI<br>
・医療機関での活躍の紹介<br>
・同時に発せられる言葉を分けるデモ<br>
・Gmail のサジェスト機能は今月提供される<br>
・Google Photo では明るさをサジェスト＆固定したり、撮影したドキュメントを pdf にできるようになる。また、背景だけ灰色にしたり、過去の撮影した写真の色を再現できる。これらは次の数ヶ月間に提供したいとのことだった。<br>
・Google Assistant については、６つの新しい声を発表。<a href="http://d.hatena.ne.jp/keyword/John%20Legend">John Legend</a>という有名な歌手？の声も追加。</li>
<li>Assistant<br>
・新しいデ<a href="http://d.hatena.ne.jp/keyword/%A5%D0%A5%A4%A5%B9">バイス</a>の発表があった。<a href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%DE%A1%BC%A5%C8%A5%C7%A5%A3%A5%B9%A5%D7%A5%EC%A5%A4">スマートディスプレイ</a><br>
・スタバの注文（他のパートナーも多く来ている）のデモ<br>
・<a href="http://d.hatena.ne.jp/keyword/google%A5%DE%A5%C3%A5%D7">google マップ</a>の進化（この夏）<br>
・Assistant がサロンに電話をかけ、人間とやり取りし、予約するデモ。相槌もできる。これは今後さらに実験していく予定</li>
<li><a href="http://d.hatena.ne.jp/keyword/Google%20News">Google News</a><br>
・top5 の記事を出す<br>
・デザインの変更<br>
・好きな出版社の記事を購読できる</li>
<li>Android P<br>
・bata 版の発表。<br>
・テーマは、Intelligence、Simplicity、Digital wellbeing<br>
・バッテリー問題は常にあり、明るさを自動で調整する機能を提供<br>
・使うアプリを予測し、上に並べてくれる。また、行動を予測し、電話の相手などサジェストしてくれる。</li>
<li>ML Kit<br>
・bata 版をリリース
・そういえば pre-show でも ML が使われていたらしい？</li>
<li>新しい Android のデザインと UI<br>
・電話を裏返しておけば通知が来ない<br>
・秋頃に夜中に画面をグレーズケールにする機能を提供</li>
<li>GoogleMap<br>
・シェアして投票して決定できる機能<br>
・UI 変更<br>
・かわいいガイドが案内してくれる機能も</li>
<li>Google Lens<br>
・メニューを写すとテキスト化される<br>
・StyleMatch。写したものにマッチした商品を紹介してくれる<br>
・これらは数週間後に発表する</li>
<li>WEIMO<br>
・自動運転</li>
</ul>
<!-- raw HTML omitted -->
<h2 id="developer-keynote">Developer Keynote</h2>
<ul>
<li>Android<br>
・リソースを小さくする様子をデモ<br>
・当日から Android App Bundle (AAB)を使用可能に<br>
・<a href="http://d.hatena.ne.jp/keyword/JetPack">JetPack</a>の発表。開発のスピードアップ</li>
</ul>
<!-- raw HTML omitted -->
<p>・AndroidStudio ナビゲーションエディタで視覚化<br>
・開発を速くする<br>
・<a href="http://d.hatena.ne.jp/keyword/%A5%A8%A5%DF%A5%E5%A5%EC%A1%BC%A5%BF">エミュレータ</a>の高速化<br>
・Slice</p>
<!-- raw HTML omitted -->
<p>・AndroidThings1.0 が前日に発表<br>
・AndroidThingsKit がお土産です</p>
<ul>
<li>
<p>device</p>
<p>・<a href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%DE%A1%BC%A5%C8%A5%C7%A5%A3%A5%B9%A5%D7%A5%EC%A5%A4">スマートディスプレイ</a></p>
<p>・DialogFrow
・Acton on Google
・Action Links</p>
</li>
</ul>
<!-- raw HTML omitted -->
<ul>
<li>WebPlatform<br>
・PWA<br>
・PWA の結果を発表<a href="http://d.hatena.ne.jp/keyword/Instagram">Instagram</a>の例：何かが 20％UP<br>
・GoogleMap は PWA を開始<br>
・Lighthouse3.0<br>
・AMP<br>
・chromeOS で AndroidSturio を実行できるようになった。<br>
・chromeOS で<a href="http://d.hatena.ne.jp/keyword/Linux">Linux</a>を実行可能</li>
<li>Material<br>
・Material Theming<br>
・MaterialDesin エディタを発表。Sketch の<a href="http://d.hatena.ne.jp/keyword/%A5%D7%A5%E9%A5%B0%A5%A4%A5%F3">プラグイン</a>である。<br>
・Material Components を当日から提供開始</li>
</ul>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<ul>
<li>AI
・cloud tpu を発表
・cloud AI
・TensorFlow</li>
</ul>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<ul>
<li>Firebase<br>
・ML kit bata 版</li>
<li>ARCore<br>
・sceneform<br>
・Augmented image<br>
・cloudAncers</li>
</ul>
<p>・空間を共有できるアプリ</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<h2 id="lunch">Lunch</h2>
<p>LunchBox を手に入れる時に争奪戦でした（DAY1 のみｗ）<br>
中身は三日間ともだいたいこんなかんじ。</p>
<p><!-- raw HTML omitted --><img src="https://cdn-ak.f.st-hatena.com/images/fotolife/j/joooi13/20180513/20180513184544.png" alt="f:id:joooi13:20180513184544p:plain" title="f:id:joooi13:20180513184544p:plain"><!-- raw HTML omitted --></p>
<h2 id="an-introduction-to-developing-actions-for-the-google-assistant">An introduction to developing Actions for the Google Assistant</h2>
<!-- raw HTML omitted -->
<ul>
<li>Actinon on Google</li>
<li>Monetize</li>
<li>RE engage</li>
<li>Recipi は便利そう</li>
<li>androidApp ←App Afctions へ</li>
<li>よりスムーズな会話ができる</li>
<li>maltiModal conversations</li>
<li>visualOnly voiceOnly</li>
<li>spledSheet にかんたんにファイリングできる</li>
<li>sumilator でテストができる
<a href="https://assistant.google.com/explore">https://assistant.google.com/explore</a></li>
</ul>
<h2 id="getting-started-with-app-actions">Getting started with App Actions</h2>
<!-- raw HTML omitted -->
<h2 id="afterperty">AfterPerty</h2>
<p>19 時ごろからスタート。長蛇の列に並んで軽食＆ビールをゲット。<br>
会場全体が一変してパーティの雰囲気に。<br>
DJ がいたり、マジックショーなども開催されていていました。</p>
<p><!-- raw HTML omitted --><img src="https://cdn-ak.f.st-hatena.com/images/fotolife/j/joooi13/20180513/20180513184333.png" alt="f:id:joooi13:20180513184333p:plain" title="f:id:joooi13:20180513184333p:plain"><!-- raw HTML omitted --></p>
<h1 id="day-02">DAY 02</h1>
<p>この日も 8 時半には会場入りし、ベーグルとコーヒー持って Amphitheatre へ。<br>
恥ずかしながら聞き取りに自信がのない私は、DAY1 と同様に字幕も見える席をゲット。</p>
<blockquote>
<p>字幕だいぶみてた <a href="https://t.co/YE3QGWJG8P">pic.twitter.com/YE3QGWJG8P</a>— じょいお (@joooi13) <a href="https://twitter.com/joooi13/status/993926924001984512?ref_src=twsrc%5Etfw">2018 年 5 月 8 日</a></p>
</blockquote>
<h2 id="android-jetpack-how-to-smartly-use-fragments-in-your-ui">Android Jetpack: how to smartly use Fragments in your UI</h2>
<p>昨日の<a href="http://d.hatena.ne.jp/keyword/keynote">keynote</a>で話題になっていた<a href="http://d.hatena.ne.jp/keyword/JetPack">JetPack</a>!</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<h2 id="whats-new-in-android-things">What&rsquo;s new in Android Things</h2>
<p>powafull intelligent edge device</p>
<p>solution</p>
<p>new device
画面付きの<a href="http://d.hatena.ne.jp/keyword/google%20home">google home</a>みたいなものが発売</p>
<p>androidthings は様々なものと共存できる
androidSDK,androidStudio,Play,Firebace,Cloud&hellip;.</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<ul>
<li>今回のお土産は androidthingsKit と GoogleHomeMini</li>
</ul>
<p><!-- raw HTML omitted --><img src="https://cdn-ak.f.st-hatena.com/images/fotolife/j/joooi13/20180513/20180513192927.png" alt="f:id:joooi13:20180513192927p:plain" title="f:id:joooi13:20180513192927p:plain"><!-- raw HTML omitted --></p>
<h2 id="bring-the-best-of-google-photos-to-your-app">Bring the best of Google Photos to your app</h2>
<ul>
<li>Google Photo Assistant</li>
<li>Google Photo Library APi</li>
<li>開発者プレビューを公開している</li>
<li>モバイルフレンドリー</li>
<li>Google photos API</li>
</ul>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<h2 id="whats-new-in-web-accessibility">What&rsquo;s new in web accessibility</h2>
<ul>
<li>Chrome dev tool を使った、テストのアクセシビリティについて</li>
<li>Chrome verrsion 66.0.3359.139 から。</li>
<li>accessibility testing 　ができる</li>
<li>特別なツールを使わなくても、ブラウザでできる</li>
<li>LightHouse</li>
</ul>
<!-- raw HTML omitted -->
<ul>
<li>LightHouse をつかうと一般的なテストがすぐにできる。</li>
<li>新しい ColorPicker のデモ</li>
<li>forcusVisible</li>
</ul>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<ul>
<li>JS API の紹介</li>
<li>SEO の機能が追加された（３月）</li>
<li>The Accessibility Object Model（AOM）</li>
</ul>
<!-- raw HTML omitted -->
<ul>
<li>voiceOver できる！</li>
</ul>
<!-- raw HTML omitted -->
<h2 id="ml-kit-machine-learning-sdkhttpdhatenanejpkeywordsdk-for-mobile-developers">ML Kit: Machine Learning <a href="http://d.hatena.ne.jp/keyword/SDK">SDK</a> for mobile developers</h2>
<p>smasrt replay <a href="http://d.hatena.ne.jp/keyword/api">api</a>
in FirebaseControl</p>
<!-- raw HTML omitted -->
<h2 id="best-practices-using-compilers-in-android-studiohttpdhatenanejpkeywordandroid20studio">Best practices using compilers in <a href="http://d.hatena.ne.jp/keyword/Android%20Studio">Android Studio</a></h2>
<ul>
<li>3.0 + gradle</li>
<li>D8</li>
<li>start →Java/kotlin →D8 →APK</li>
<li>DX から D ８になった。さらに D ８（2.3.3）になた</li>
<li>R8</li>
<li>AAB(Android App Bundle)</li>
</ul>
<!-- raw HTML omitted -->
<h2 id="northeast-asiahttpdhatenanejpkeywordasia-and-oceania-community-gathering--io">Northeast <a href="http://d.hatena.ne.jp/keyword/Asia">Asia</a> and Oceania Community Gathering @ I/O</h2>
<p>今回コミュニティ枠チケットでの参加ということで、17 時過ぎに別会場へ移動してこちらに参加。<br>
I/O の会場とは違い、日本人がとても多かったので終始英語で・・というわけではなかったが、他の国の方とも交流ができた。</p>
<h2 id="live">LIVE</h2>
<p>コニュニティサミット後は会場に戻り、Justice の LIVE を鑑賞。</p>
<blockquote>
<p><a href="http://d.hatena.ne.jp/keyword/keynote">keynote</a>の場所‥？ <a href="https://t.co/RMUTAkFobu">pic.twitter.com/RMUTAkFobu</a>— じょいお (@joooi13) <a href="https://twitter.com/joooi13/status/994425324057251840?ref_src=twsrc%5Etfw">2018 年 5 月 10 日</a></p>
</blockquote>
<h1 id="day-03">DAY 03</h1>
<p>恒例の朝食のベーグルにちょっと飽つつ、この日も 8 時半頃に Amphitheatre へ。<br>
だいぶ人減った・・？</p>
<h2 id="android-jetpackhttpdhatenanejpkeywordjetpack-manage-ui-navigation-with-navigation-controller">Android <a href="http://d.hatena.ne.jp/keyword/Jetpack">Jetpack</a>: manage UI navigation with Navigation Controller</h2>
<ul>
<li>navigation</li>
<li>Navigation Graph</li>
<li>DeepLink</li>
<li>ExplicitDeepLink 明示的</li>
<li>ImplicitDeepLink 　暗黙</li>
<li>ManifestMerger</li>
<li>navigation 1.0.0-alpha available</li>
</ul>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<h2 id="build-real-world-games-with-google-mapshttpdhatenanejpkeywordgoogle20maps">Build real world games with <a href="http://d.hatena.ne.jp/keyword/Google%20Maps">Google Maps</a></h2>
<!-- raw HTML omitted -->
<h2 id="whats-new-with-sign-up-and-sign-in-on-the-web">What&rsquo;s new with sign up and sign in on the web</h2>
<!-- raw HTML omitted -->
<h2 id="codelabs">Codelabs</h2>
<p>途中 Codelabs にいって、Flutter やってみた。</p>
<blockquote>
<p>Codelab ..first try😳 <a href="https://t.co/jqZ3myxnIV">pic.twitter.com/jqZ3myxnIV</a>— じょいお (@joooi13) <a href="https://twitter.com/joooi13/status/994642503318978561?ref_src=twsrc%5Etfw">2018 年 5 月 10 日</a></p>
</blockquote>
<p>４つスタンプを集めると来年の I/O の抽選券が獲得できるとのこと。</p>
<h2 id="experience">Experience</h2>
<p>会場の至るところにある。<br>
体験させてもらったり、質問もできる。<br>
いくつか体験したのでめも。</p>
<ul>
<li>SONG MAKER</li>
<li>MOVE MIRROR</li>
<li>手を登録して、バトルできるやつ ←</li>
<li>Droidkun が写真を撮ってくれるやつ</li>
<li>AR 空間にお絵描き</li>
</ul>
<blockquote>
<p>これやった！ <a href="https://t.co/HacDGSkCjt">pic.twitter.com/HacDGSkCjt</a>— じょいお (@joooi13) <a href="https://twitter.com/joooi13/status/994370724922982400?ref_src=twsrc%5Etfw">2018 年 5 月 10 日</a></p>
</blockquote>
<h1 id="さいごに">さいごに</h1>
<p>session 以外にも codelab、Experience、party など
会場に行かなければ体験できないことも多く、あっという間の日々だった。<br>
至る所に水分補給の場所があったりと、設備も整っていて不自由もなく過ごしやすかった。<br>
（ただし日焼けには本当に注意）<br>
ちょっと未来の話が聞けたり、それについて感想を言い合ったりがとても楽しかった。</p>
<p>来年もいきたい！</p>
<p><!-- raw HTML omitted --><img src="https://cdn-ak.f.st-hatena.com/images/fotolife/j/joooi13/20180513/20180513184943.png" alt="f:id:joooi13:20180513184943p:plain" title="f:id:joooi13:20180513184943p:plain"><!-- raw HTML omitted --></p>
<p>※講演レポートはメモ要素が多く、乱文失礼しました</p>
]]></content></item></channel></rss>